{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/WEB",
    "result": {"pageContext":{"currentCategory":"WEB","categories":["All","WEB","블로그","Alg","ADsP","FE","Algorithms"],"edges":[{"node":{"id":"bb64831b-04c3-554c-a783-af377795429b","excerpt":"Django를 이용하여 서버를 구축하는 과정에 있어서, model을 설계하고 Serailizer를 이용하여 데이터를 CRUD하면서 헷갈리는 개념을 공부해보았다. 우선, DRF는 설치되어 있어야한다. (가상 환경 만들고, drf project 생성하고, app 생성하고 실행하기) DRF 데이터 흐름 DB ↔ QuerySet/Model ↔ OrderdDict(ReturnDict) ↔ JSON 우리가 사용할 데이터는 보통 DB에 테이블로서 존재하는데, 여기서는 하나의 테이블이 하나의 모델이 될 것이다. DB의 값을 바로 가져와 python 코드레벨에서 사용하는 것은 불가능하고, 위의 과정을 거쳐서 JSON으로 사용할 수 있게 된다. (역으로 JSON 데이터를 DB에 넣거나 수정할 때에도 마찬가지) DRF에서는 model에서 dictionary로 변환하는 과정을 (직렬화,,, 의역하여 객체화.?) 라고 정의하고, dictionary에서 model로 변환하는 과정을 라고 정의한다. DRF에…","fields":{"slug":"/DRF_serializer/"},"frontmatter":{"categories":"WEB","title":"(DRF) Django Rest Framework, Serialize 개념 이해하기","date":"January 03, 2023"}},"next":{"fields":{"slug":"/deploy-2-front-server/"}},"previous":null},{"node":{"id":"709cb75a-570a-5de4-8075-19486a37c740","excerpt":"프론트엔드 서버 개발 저번 시간에 정한 구조를 기반으로 간단한 웹사이트를 개발하고 배포해보도록 하자.! 오늘은 그중에 프론트엔드 서버부터 만들어보자. 한 문장으로 정리하면 프론트엔드 서버는 웹 서버가 url 요청에 대하여 build된 react file의 결과물(html, css, js)를 리턴하도록만 하면 된다. 웹서버의 프록시는 사용하지 않을 할 예정이다.","fields":{"slug":"/deploy-2-front-server/"},"frontmatter":{"categories":"WEB","title":"(배포) 웹서비스 배포하기 (2) 프론트 서버 개발","date":"January 01, 2023"}},"next":{"fields":{"slug":"/deploy-1-basic/"}},"previous":{"fields":{"slug":"/DRF_serializer/"}}},{"node":{"id":"b16b8c18-01f9-539f-9955-57e778d6453e","excerpt":"목표 CRA를 이용한  프론트 개발, 와 을 이용한 api 서버 개발 모두 할 줄 안다면, 이제 배포를 해볼 차례이다.! 배포까지 해보아야 웹 서비스가 어떤 식으로 구성되는지 알 수 있을 것 같아서 공부해보았고, 그 기록을 남기고자 한다. 목표는 다음과 같다. 클라우드 환경을 이용하여 웹서비스(풀스택) 배포하기 docker 이용하여 배포 환경 구축하기 (optional) 도메인 구입해서 쉽게 접속하기 Web Service Architecture 출처: https://fractalideas.com/blog/making-react-and-django-play-well-together/ asdf 크게 4가지 방법이 있고, 각각에 대하여 이해해보자. 두개(front, api)의 서버를 두는 구조이다. client가 브라우저를 통하여 url(app.example.com)을 입력하면, front-server에서 이를 처리하여 html, css, js 파일을 리턴해준다. 그리고, 해당 사이트에…","fields":{"slug":"/deploy-1-basic/"},"frontmatter":{"categories":"WEB","title":"(배포) 웹서비스 배포하기 (1) 서비스 아키텍쳐","date":"December 30, 2022"}},"next":{"fields":{"slug":"/mac-setup-openmp/"}},"previous":{"fields":{"slug":"/deploy-2-front-server/"}}},{"node":{"id":"f6ef8e8f-999b-58d3-89ab-bab4c4f24f10","excerpt":"Web service with JavaScript(React and Express Js) + MySQL 자바스크립트로 프론트와 백엔드를 모두 구축해보며 웹서비스에 대한 전반적인 이해도를 높여보자! 개발 환경 아직 번들러를 다룰 줄 모르기에 간단하게 CRA로 웹서버를 구축해보았다. SQL도 할 줄 모르지만, 이 기회에 하면서 배워보도록 하자! React.js with Create React App () https://create-react-app.dev/ 을 참고한다. Express.js Node.js 기반의 웹 서버를 구축할 수 있도록 만들어진 framework로 순수 Node.js로 서버를 구축하는 것보다 훨씬 편한 기능을 제공한다. MySQL 관계형 DBMS로, SQL 쿼리를 통하여 데이터를 가져온다. api를 통하여 웹서버와 연동되어 CRUD를 수행하게 될 것이다. 설치 환경 node js & npm 와 로 확인 가능 MySQL 설치되었다면 로 MySQL server 실행 가…","fields":{"slug":"/full-stack-in-js/"},"frontmatter":{"categories":"WEB","title":"(WEB) 자바스크립트로 풀스택 환경 구축하기(feat mysql2)","date":"February 17, 2022"}},"next":{"fields":{"slug":"/ADsP-3-(2)-2/"}},"previous":{"fields":{"slug":"/Alg-BOJ-11279/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}